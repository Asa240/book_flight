#main-header {
	display: none !important;
}

//////////////////////////////////
// Design Tokens
//////////////////////////////////

//////////////////////////////////
// Color Palette
//////////////////////////////////
html {
	--gray-darkest: #292E31;
	--gray-darker: #505558;
	--gray-dark: #777C7F;
	--gray: #9EA3A6;
	--gray-alt: #C5CACD;
	--gray-light: #EDF2F5;
	--gray-lighter: #F2F2F2;
	--gray-lightest: #F8F8F8;
	--white: #FFFFFF;
	
	--blue: #17509F;
	--blue-dark: #0018AB;
	--blue-light: #2785D6;
	
	--purple: #9933CC;
	
	--gradient: linear-gradient(to right, var(--blue-dark), var(--purple));
	
	--cyan: #0A7DAF;
	--cyan-dark: #0D9DDB;
	--cyan-light: #0A7DAF21;
	
	--red: #E1483E;
	--red-dark: #B43931;
	--red-light: #E1483E21;
	
	--green: #3DA774;
	--green-dark: #30855C;
	--green-light: #3da77421;
	
	--yellow: #FFB511;
	--yellow-dark: #CC900D;
	--yellow-light: #FFB51121;
}

//////////////////////////////////
// Theme Map
//////////////////////////////////

:root {
	--root-bg: var(--gray-lighter);
	--root-color: var(--gray-darkest);
	--component-bg: var(--white);
	--component-border: var(--white);
	--component-trans: rgba(0,0,0, .1);
	&.theme {
		&--dark {
			--root-bg: var(--gray-darkest);
			--root-color: var(--gray-lighter);
			--component-bg: transparent;
			--component-border: var(--gray-darker);
			--component-trans: rgba(255, 255, 255, .1);
		}
	}
}

//////////////////////////////////
// Color Mappings
//////////////////////////////////

$root-bg: var(--root-bg);
$root-color: var(--root-color);
$component-bg: var(--component-bg);
$component-border: var(--component-border);
$component-trans: var(--component-trans);

$base: (
	darkest: var(--gray-darkest),
	darker: var(--gray-darker),
	dark: var(--gray-dark),
	default: var(--gray),
	alt: var(--gray-alt),
	light: var(--gray-light),
	lighter: var(--gray-lighter),
	lightest: var(--gray-lightest)
);

$blue: (
	default: var(--blue),
	dark: var(--blue-dark),
	light: var(--blue-light)
);

$info: (
	default: var(--cyan),
	dark: var(--cyan-dark),
	light: var(--cyan-light)
);

$danger: (
	default: var(--red),
	dark: var(--red-dark),
	light: var(--red-light)
);

$success: (
	default: var(--green),
	dark: var(--green-dark),
	light: var(--green-light)
);

$warning: (
	default: var(--yellow),
	dark: var(--yellow-dark),
	light: var(--yellow-light)
);

$default: (
	default: var(--gray),
	dark: var(--gray-darker),
	light: var(--gray-lighter)
);

@function color($map, $color: default) {
	@if(map-get($map, $color)) {
			@return map-get($map, $color);
	}
	@else {
		@warn 'This color does not exist';
	}
}

$states: (
	primary: color($blue),
	info: color($info),
	danger: color($danger),
	success: color($success),
	warning: color($warning),
	default: color($default)
);

//////////////////////////////////
// Typography
//////////////////////////////////

$font-family: -apple-system, BlinkMacSystemFont,
    "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans",
    "Droid Sans", "Helvetica Neue", sans-serif;

$spacing-unit: .8rem;

$type-sizes: (
	h1: 								5.4rem,
	h2: 								3.6rem,
	h3: 								2.4rem,
	h4: 								2.0rem,
	h5: 								1.8rem,
	h6: 								1.6rem,
	p-lead:					2.0rem,
	p-small: 			1.4rem,
	p: 									1.6rem,
	small: 					1.4rem,
	small-caps: 1.1rem
);

$type-sizes-mobile: (
	h1: 								4.8rem,
	h2: 								3.2rem,
	h3: 								2.2rem,
	h4: 								1.8rem,
	h5: 								1.6rem,
	h6: 								1.4rem,
	p-lead:					1.8rem,
	p-small: 			1.4rem,
	p: 									1.6rem,
	small: 					1.4rem,
	small-caps: 1.1rem
);

@function type-size($key:p) {
	@if(map-get($type-sizes, $key)) {
		@return map-get($type-sizes, $key)
	}
	@else {
		@warn 'The size you entered does not exist'
	}
}

@function type-size-mobile($key:p) {
	@if(map-get($type-sizes-mobile, $key)) {
		@return map-get($type-sizes-mobile, $key)
	}
	@else {
		@warn 'The size you entered does not exist'
	}
}

//////////////////////////////////
// Spacing
//////////////////////////////////

$spacing-unit: 8px;

$spacing-sizes: (
	xxs: $spacing-unit/4,
	xs: $spacing-unit/2,
	sm: $spacing-unit,
	md: $spacing-unit*2,
	lg: $spacing-unit*4,
	xl: $spacing-unit*8,
	xxl: $spacing-unit*16
);

@function spacing($key:md) {
	@if(map-get($spacing-sizes, $key)) {
		@return map-get($spacing-sizes, $key)
	}
	@else {
		@warn 'The size you entered does not exist'
	}
}

//////////////////////////////////
// Border Radius
//////////////////////////////////

$border-radius-sizes: (
	sm: .1rem,
	md: .2rem,
	lg: .4rem
);

@function border-radius($key:md) {
	@if(map-get($border-radius-sizes, $key)) {
		@return map-get($border-radius-sizes, $key)
	}
	@else {
		@warn 'The size you entered does not exist'
	}
}

//////////////////////////////////
// Box Shadow
//////////////////////////////////

$box-shadow-sizes: (
	none: 0,
	xs: 0px 0px 0px 1px rgba(black, .1),
	sm: 0px 3px 6px -1px rgba(black, .1),
	md: 0px 5px 12px -2px rgba(black, .1),
	lg: 0px 12px 25px -4px rgba(black, .1),
	xl: 0px 18px 36px -6px rgba(black, .1)
);

@function box-shadow($key: md) {
	@if(map-get($box-shadow-sizes, $key)) {
		@return map-get($box-shadow-sizes, $key)
	}
	@else {
		@warn 'The size you entered does not exist'
	}
}

//////////////////////////////////
// Rendered Styles
//////////////////////////////////

//////////////////////////////////
// Base
//////////////////////////////////

html {
	box-sizing: border-box;
	font-size: 62.5%;
}

*, *:before, *:after {
	box-sizing: inehrit;
}

html, body {
	width: 100%;
	height: 100%;
}

body {
	background: $root-bg;
	color: $root-color;
	font-family: $font-family;
	font-size: type-size(p);
	@media screen and (max-width: 768px) {
		font-size: type-size-mobile(p);
	}
}

h1,h2,h3,h4,h5,h6 {
	font-weight: 700;
	line-height: 1.2;
	margin-top: 0;
	text-transform: uppercase;
}

@mixin headerType($letter-spacing, $margin-bottom, $map-size) {
	letter-spacing: $letter-spacing;
	margin-bottom: $margin-bottom;
	font-size: type-size($map-size);
	@media screen and (max-width: 768px) {
		font-size: type-size-mobile($map-size);
	}
}

$headers: (h1,h2,h3,h4,h5,h6);

@each $header in $headers {
	#{$header} {
		@include headerType(.08rem, $spacing-unit*2, #{$header});
	}
}

input, select, textarea, button {
	font-family: inherit;
	color: inherit;
}

button {
	user-select: none;
}

.c-divider {
	width: 100%;
	border: .5px solid $component-trans;
	box-shadow: none;
	margin-top: spacing();
	margin-bottom: spacing();
	height: .5px;
}

//////////////////////////////////
// Layout
//////////////////////////////////

.l-layout {
	width: 100%;
	max-width: 100%;
	margin: auto;
	padding: 0;
	@media screen and (min-width: 768px) {
		padding: 10vh spacing();
		max-width: 400px;
	}
}

//////////////////////////////////
// Card
//////////////////////////////////

.c-card {
	background: red;
	border-radius: border-radius();
	background: $component-bg;
	border: 1px solid $component-border;
	box-shadow: box-shadow(md), box-shadow(lg);
	opacity: 0;
	position: relative;
	animation: fadeUp 240ms ease-out 120ms forwards;
	&__header, &__body {
		padding: spacing(md);
	}
	&__header {
		border-bottom: 1px solid $component-border;
		display: flex;
		flex-direction: column;
		position: relative;
	}
	&__body {
		//background: $component-trans;
	}
	&__title {
		margin-bottom: 0;
	}
}

//////////////////////////////////
// Button
//////////////////////////////////

.c-button {
	border: 0;
	padding: spacing(sm)  spacing();
	cursor: pointer;
	background: $component-trans;
	border-radius: border-radius();
	position: relative;
	transition: all 100ms ease-out 0s;
	&:focus, &:active {
		outline: 0;
	}
	&:hover {
		background: $root-color;
		color: $root-bg;
	}
	&--success {
		background: color($success);
		color: var(--white);
		&:hover {
			background: color($success, dark);
			color: var(--white);
		}
	}
	&--full {
		display: block;
		width: 100%;
	}
	&--lg {
		padding: spacing(md);
		font-size: type-size(p-lead);
	}
	&--sm {
		padding: spacing(xs) spacing(sm);
		font-size: type-size(small);
	}
	&--secondary {
		border-color: transparent;
		background: transparent;
		&:hover {
			background: $component-trans;
			color: $root-color;
			opacity: .8;
		}
	}
}

#flightActions {
	display: none;
	background: $root-bg;
	z-index: 100;
	border-top: 1px solid $component-border;
	@media screen and (max-width: 768px) {
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
		box-shadow: 0px -5px 12px rgba(black, .1);
	}
}

.c-theme {
	$size: 32px;
	width: $size;
	height: $size;
	position: absolute;
	top: spacing(sm);
	right: spacing(sm);
	padding: 0;
	display: inline-flex;
	align-items: center;
	justify-content: center;
}

//////////////////////////////////
// Media
//////////////////////////////////

.c-media {
	display: flex;
	width: 100%;
	&__img {
		margin-right: spacing();
	}
	&__title {
		margin-bottom: spacing(sm);
	}
}

//////////////////////////////////
// Avatar
//////////////////////////////////

.c-avatar {
	$size: 48px;
	width: $size;
	height: $size;
	background: $component-trans;
	display: inline-block;
	border-radius: border-radius();
	position: relative;
	&:after {
		content: attr(data-avatar);
		text-transform: uppercase;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%,-50%);
		font-size: type-size(h3);
		opacity: .6;
	}
	&--accent {
		background: $root-color;
		color: $root-bg;
	}
	&--sm {
		$size: 32px;
		width: $size;
		height: $size;
		&:after {
			font-size: type-size(h5);
		}
	}
}

//////////////////////////////////
// Schedule
//////////////////////////////////

.c-schedule {
	display: flex;
	align-items: center;
	justify-content: center;
	padding-top: spacing(sm);
	padding-bottom: spacing(sm);
	&__item {
		display: inline-flex;
		flex-direction: column;
		text-align: center;
		padding: 0 spacing();
	}
	&__button {
		position: absolute;
		top: 0;
		bottom: 0;
		right: 0;
		height: 100%;
		margin-right: 0;
		width: 72px;
		background: color($info, light);
		color: color($info);
		border-radius: 0;
		&:after {
			font-size: type-size(small);
			opacity: 1;
		}
	}
	&--active {
		background: color($success, light);
		outline: 1px solid color($success);
		color: color($success);
		.c-schedule__button {
			background: color($success);
		color: var(--white);
		}
	}
}

.c-plane {
	color: color($base);
	position: relative;
	&:before, &:after {
		content: '';
		position: absolute;
		top: 50%;
		width: spacing(md);
		height:1px;
		background: currentColor;
		transform: translateY(-50%);
	}
	&:before {
		left: 0;
	}
	&:after {
		right: 0;
	}
	&__icon {
		width: 32px;
		transform: rotate(90deg);
	}
}

//////////////////////////////////
// List
//////////////////////////////////

.c-list {
	margin: 0;
	padding: 0;
	list-style-type: none;
	&__item {
		position: relative;
		&:not(:last-of-type) {
			border-bottom: 1px solid $component-trans;
		}
		&:first-of-type {
			border-top: 1px solid $component-trans;
		}
	}
	&__link {
		padding: (spacing(sm) + spacing(xs)) spacing(md);
		cursor: pointer;
		width: 100%;
		border: 0;
		background: transparent;
		text-align: left;
		transition: all 240ms ease-out 0s;
		&:hover, &:active {
			padding-left: spacing(md) + spacing(sm);
			background: $component-trans;
			.c-schedule__button {
				background: color($success);
				color: var(--white);
			}
		}
		&:active, &:focus {
			outline: 3px solid $component-trans;
		}
	}
}

//////////////////////////////////
// Table
//////////////////////////////////

.c-table {
	width: 100%;
	border-spacing: 0;
	td,th {
		text-align: left;
	}
}

//////////////////////////////////
// Toggle
//////////////////////////////////

.c-toggle {
	$color: color($info);
	display: inline-flex;
	border: 1px solid $color;
	border-radius: border-radius(lg);
	&__btn {
		background: transparent;
		border: 0;
		color: $color;
		padding: spacing(xs);
		min-width: 40px;
		font-size: type-size(small);
		cursor: pointer;
		letter-spacing: .05rem;
		&:focus, &:active {
			outline: 0;
		}
		&:first-of-type {
			border-top-left-radius: border-radius(lg);
			border-bottom-left-radius: border-radius(lg);
		}
		&--active {
			background: $color;
			color: var(--white);
		}
	}
}

//////////////////////////////////
// Utilities
//////////////////////////////////

@each $key, $val in $states {
	.u-text--#{$key} {
		color: $val !important;
	}
	.u-bg--#{$key} {
		background: $val !important;
	}
}

.u-text--white {
	color: var(--white) !important;
}

.u-bg--white {
	color: var(--white) !important;
}

@each $key,$val in $base {
	.u-text--b-#{$key} {
		color: $val !important;
	}
	.u-bg--b-#{$key} {
		background: $val !important;
	}
}

//////////////////////////////////////////////
// Text Utilities
//////////////////////////////////////////////

.u-text--center {
	text-align: center !important;
}

.u-text--left {
	text-align: left !important;
}

.u-text--right {
	text-align: right !important;
}

//////////////////////////////////////////////
// Spacing Utilities
//////////////////////////////////////////////

$directions: (
	l: left,
	r: right,
	t: top,
	b: bottom
);

@each $key,$val in $spacing-sizes {
	@each $label,$direction in $directions {
		.u-padding-#{$label}--#{$key} {
			padding-#{$direction}: $val !important;
		}
		.u-margin-#{$label}--#{$key} {
			margin-#{$direction}: $val !important;
		}
	}
	
	.u-padding--#{$key} {
		padding: $val !important;
	}
}

.u-margin-x--auto {
	margin-left: auto !important;
	margin-right: auto !important;
}

.u-margin-y--auto {
	margin-top: auto !important;
	margin-bottom: auto !important;
}

//////////////////////////////////////////////
// Border Utilities
//////////////////////////////////////////////

.u-border {
	border-width: 1px;
	border-style: solid;
}

@each $key, $val in $states {
	.u-border--#{$key} {
		border-color: $val !important;
	}
}

@each $key, $val in $border-radius-sizes {
	.u-rounded--#{$key} {
		border-radius: $val !important;
	}
}

//////////////////////////////////////////////
// Animation
//////////////////////////////////////////////

@keyframes fadeUp {
	from {
		opacity: 0;
		top: spacing(md);
	}
	to {
		opacity: 1;
		top: 0;
	}
}